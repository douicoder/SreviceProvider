@page "/shopacceptdashboard"

@using ServiceProvider.Shared
@using ServiceProvider.Shared.Chats
@inject HttpClient Http

<PageTitle>Shop Accept Request DashBoards</PageTitle>

<h1>Shop Accept Request DashBoards</h1>


@if (requests == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Problem</th>
                <th>Description</th>
                <th>Pincode</th>
                <th>CreateDate</th>
                <th>UserName</th>
                <th>Options</th>


            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in requests)
            {
                <tr>
                    @if (forecast.IsAccepted == true)//and reqest is accepted by ME
                    {
                        <td>@forecast.Problem</td>
                        @if (@forecast.Description?.Length > 4)
                        {
                            int length = @forecast.Description.Length - 4;
                            <td>
                                @forecast.Description?.Substring(0, 4)
                                <a @onclick="() => MyServices.ShowDescription(js,forecast.Description)" style="color:blue"><u>see more</u></a>
                            </td>
                        }
                        else
                        {
                            <td>@forecast.Description</td>
                        }

                        <td>@forecast.Pincode</td>
                        <td>@forecast.CreateDate</td>
                        <td>@forecast.UserName</td>
                        <td>
                            <MudButton Class="btnresize" Variant="Variant.Filled" Color="Color.Success" >chat</MudButton>

                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
}

@code
{
    List<GetRequestInfoModel> requests = new List<GetRequestInfoModel>();
    UserModel publicuserModel = new UserModel();
    ServiceProviderProfile serviceProvider = new ServiceProviderProfile();
    protected override async Task OnInitializedAsync()
    {
        publicuserModel = await _localstorage.GetItemAsync<UserModel>("currentuser");
        serviceProvider = await Http.GetFromJsonAsync<ServiceProviderProfile>("api/ServiceProviderDetails/GetServiceProviderProfile?userId=" + publicuserModel.ID);
      
        requests = await Http.GetFromJsonAsync<List<GetRequestInfoModel>>("api/Request/GetRequestInfo?AcceptedByGuid="+serviceProvider.ServiceproviderProfileID);

    }

}
